apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.gradle-plugin-testing'
apply plugin: 'com.palantir.external-publish-gradle-plugin'

dependencies {
    implementation project(':plugin-testing-core')
    implementation 'com.google.guava:guava'
    implementation 'com.palantir.baseline:gradle-baseline-java'

    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.netflix.nebula:nebula-test'
}

gradlePlugin {
    website = 'https://github.com/palantir/gradle-plugin-testing'
    vcsUrl = 'https://github.com/palantir/gradle-plugin-testing'

    plugins {
        pluginTestingPlugin {
            id = 'com.palantir.gradle-plugin-testing'
            displayName = 'Palantir Plugin for testing other gradle plugins'
            description = 'A Gradle plugin that detects failures in CircleCI jobs and converts them into JUnit test reports that can be rendered in CircleCI UI.'
            tags.set(['failure', 'report', 'reporting', 'circleci'])
            implementationClass = 'com.palantir.gradle.plugintesting.PluginTestingPlugin'
        }
    }
}

test {
    systemProperty 'projectVersion', project.version
    //TODO(#xxx): Remove this once we have a published version of the plugin that we can apply to the project itself
    systemProperty 'ignoreDeprecations', 'true'

    // Added as a jar the so in nebula-tests needs to exist in maven local
    dependsOn tasks.findByPath(':plugin-testing-core:publishToMavenLocal')
}
